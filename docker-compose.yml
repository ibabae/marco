services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: laravel_app
        restart: unless-stopped
        working_dir: /var/www/marco
        volumes:
            - .:/var/www/marco
            - ./php.ini:/usr/local/etc/php/conf.d/php.ini
        networks:
            - laravel
        ports:
            - "5173:5173"

    web:
        image: nginx:latest
        container_name: laravel_web
        restart: unless-stopped
        ports:
            - "90:80"
        volumes:
            - .:/var/www/marco
            - ./nginx.conf:/etc/nginx/conf.d/default.conf
        networks:
            - laravel
        depends_on:
            - app

    db:
        image: mysql:latest
        container_name: laravel_db
        restart: unless-stopped
        ports:
            - "3307:3306"
        environment:
            MYSQL_ROOT_PASSWORD: "1234"
        volumes:
            - dbdata:/var/lib/mysql
        networks:
            - laravel

    postgres:
        image: postgres:latest
        container_name: postgres_container
        environment:
            POSTGRES_DB: marco
            POSTGRES_USER: root
            POSTGRES_PASSWORD: 1234
        ports:
            - "5432:5432"
        volumes:
            - postgres_data:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U root"]
            interval: 10s
            timeout: 5s
            retries: 5

    mongo:
        image: mongo:6
        container_name: mongo_container
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: 1234
        volumes:
            - mongo_data:/data/db
        ports:
            - "27017:27017"

    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        platform: linux/amd64 # for mac
        container_name: phpmyadmin
        restart: unless-stopped
        ports:
            - "9090:80"
        environment:
            PMA_HOST: db
            MYSQL_ROOT_PASSWORD: "1234"
        depends_on:
            - db
        networks:
            - laravel

    redis:
        image: redis:latest
        container_name: laravel_redis
        restart: unless-stopped
        networks:
            - laravel

networks:
    laravel:
        driver: bridge

volumes:
    dbdata:
    postgres_data:
    mongo_data:
